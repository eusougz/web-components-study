/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface GzSideDrawer {
        "open": () => Promise<void>;
        "opened": boolean;
        "title": string;
    }
    interface GzSpinner {
    }
    interface GzStockFinder {
    }
    interface GzStockPrice {
        "stockSymbol": string;
    }
    interface GzTooltip {
        "tooltipText": string;
    }
}
declare global {
    interface HTMLGzSideDrawerElement extends Components.GzSideDrawer, HTMLStencilElement {
    }
    var HTMLGzSideDrawerElement: {
        prototype: HTMLGzSideDrawerElement;
        new (): HTMLGzSideDrawerElement;
    };
    interface HTMLGzSpinnerElement extends Components.GzSpinner, HTMLStencilElement {
    }
    var HTMLGzSpinnerElement: {
        prototype: HTMLGzSpinnerElement;
        new (): HTMLGzSpinnerElement;
    };
    interface HTMLGzStockFinderElement extends Components.GzStockFinder, HTMLStencilElement {
    }
    var HTMLGzStockFinderElement: {
        prototype: HTMLGzStockFinderElement;
        new (): HTMLGzStockFinderElement;
    };
    interface HTMLGzStockPriceElement extends Components.GzStockPrice, HTMLStencilElement {
    }
    var HTMLGzStockPriceElement: {
        prototype: HTMLGzStockPriceElement;
        new (): HTMLGzStockPriceElement;
    };
    interface HTMLGzTooltipElement extends Components.GzTooltip, HTMLStencilElement {
    }
    var HTMLGzTooltipElement: {
        prototype: HTMLGzTooltipElement;
        new (): HTMLGzTooltipElement;
    };
    interface HTMLElementTagNameMap {
        "gz-side-drawer": HTMLGzSideDrawerElement;
        "gz-spinner": HTMLGzSpinnerElement;
        "gz-stock-finder": HTMLGzStockFinderElement;
        "gz-stock-price": HTMLGzStockPriceElement;
        "gz-tooltip": HTMLGzTooltipElement;
    }
}
declare namespace LocalJSX {
    interface GzSideDrawer {
        "opened"?: boolean;
        "title"?: string;
    }
    interface GzSpinner {
    }
    interface GzStockFinder {
        "onGzSymbolSelected"?: (event: CustomEvent<string>) => void;
    }
    interface GzStockPrice {
        "stockSymbol"?: string;
    }
    interface GzTooltip {
        "tooltipText"?: string;
    }
    interface IntrinsicElements {
        "gz-side-drawer": GzSideDrawer;
        "gz-spinner": GzSpinner;
        "gz-stock-finder": GzStockFinder;
        "gz-stock-price": GzStockPrice;
        "gz-tooltip": GzTooltip;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "gz-side-drawer": LocalJSX.GzSideDrawer & JSXBase.HTMLAttributes<HTMLGzSideDrawerElement>;
            "gz-spinner": LocalJSX.GzSpinner & JSXBase.HTMLAttributes<HTMLGzSpinnerElement>;
            "gz-stock-finder": LocalJSX.GzStockFinder & JSXBase.HTMLAttributes<HTMLGzStockFinderElement>;
            "gz-stock-price": LocalJSX.GzStockPrice & JSXBase.HTMLAttributes<HTMLGzStockPriceElement>;
            "gz-tooltip": LocalJSX.GzTooltip & JSXBase.HTMLAttributes<HTMLGzTooltipElement>;
        }
    }
}
